#!/usr/bin/env bash

[ "$(id -u)" -eq 0 ] || exit 1

setup_chain() {
  local nameservers

  if [ -z "$WSL_GATEWAY" ]; then
    WSL_GATEWAY="$(ip route show 0.0.0.0/0 protocol kernel | awk '{if ($5 != "wsltap") print $3}')"
  fi

  if [ -n "$WSL_NAMESERVER" ]; then
    nameservers=("${WSL_NAMESERVER}")
  elif [ -e /mnt/wsl/resolv.conf ]; then
    mapfile -t nameservers < <(awk '/^nameserver / {print $2}' /mnt/wsl/resolv.conf)
  elif grep 'generated by WSL' /etc/resolv.conf >/dev/null 2>&1; then
    mapfile -t nameservers < <(awk '/^nameserver / {print $2}' /etc/resolv.conf)
  ese
    nameservers=()
  fi

  iptables -t nat -N WSLVPNKIT 2>/dev/null
  iptables -t nat -F WSLVPNKIT

  for ns in "${nameservers[@]}"; do
    iptables -t nat -A WSLVPNKIT -d "$ns"/32 -p udp -m udp --dport 53 -j DNAT --to-destination 192.168.127.1:53
    iptables -t nat -A WSLVPNKIT -d "$ns"/32 -p tcp -m tcp --dport 53 -j DNAT --to-destination 192.168.127.1:53
  done

  if [ -n "$WSL_GATEWAY" ]; then
    iptables -t nat -A WSLVPNKIT -d "$WSL_GATEWAY"/32 -j DNAT --to-destination 192.168.127.254
  fi
}

ensure_nat_rule() {
  iptables -t nat -C "$@" 2>/dev/null || iptables -t nat -A "$@"
}

rules_up() {
  setup_chain

  ensure_nat_rule PREROUTING -j WSLVPNKIT
  ensure_nat_rule OUTPUT -j WSLVPNKIT

  ensure_nat_rule POSTROUTING -o wsltap -j MASQUERADE
}

rules_down() {
  iptables -t nat -D PREROUTING -j WSLVPNKIT 2>/dev/null
  iptables -t nat -D OUTPUT -j WSLVPNKIT 2>/dev/null

  iptables -t nat -F WSLVPNKIT 2>/dev/null
  iptables -t nat -X WSLVPNKIT 2>/dev/null

  iptables -t nat -D POSTROUTING -o wsltap -j MASQUERADE 2>/dev/null
}

case "$1" in
  up)
    rules_up
    ;;
  down)
    rules_down
    ;;
  *)
    exit 1
    ;;
esac
